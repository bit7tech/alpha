//----------------------------------------------------------------------------------------------------------------------
// Game header
//----------------------------------------------------------------------------------------------------------------------

#include <cassert>
#include <tuple>

using namespace std;

#ifdef _DEBUG
#   define ASSERT(x, ...) assert(x)
#else
#   define ASSERT(x, ...)
#endif

//----------------------------------------------------------------------------------------------------------------------
// Configuration
//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Structures
//----------------------------------------------------------------------------------------------------------------------

struct GameOffScreenBuffer
{
    u32*    memory;
    int     width;
    int     height;
};

struct GameInput
{
    int     functionKey;
    int     number;
    int     x;
    int     y;
    bool    lastClick;
    bool    click;
    f64     dt;
};

//----------------------------------------------------------------------------------------------------------------------
// Macros
//----------------------------------------------------------------------------------------------------------------------

#define G_RGB(r, g, b) ((u32)((u32)(b) + ((u32)(g) << 8) + ((u32)(r) << 16) + (u32)0xff000000))
#define G_RGBA(r, g, b, a) ((u32)((u32)(b) + ((u32)(g) << 8) + ((u32)(r) << 16) + ((u32)(a) << 24)))

//----------------------------------------------------------------------------------------------------------------------
// API
//----------------------------------------------------------------------------------------------------------------------

void initGame();
void doneGame();
void gameUpdateAndRender(GameOffScreenBuffer& buffer, GameInput& input);

//----------------------------------------------------------------------------------------------------------------------
// Platform services (defined in the corresponding platform cc file).
//----------------------------------------------------------------------------------------------------------------------
